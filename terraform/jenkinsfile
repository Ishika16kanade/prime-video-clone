pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    parameters {
        string(name: 'action', defaultValue: 'apply', description: 'terraform action: apply or destroy')
    }

    stages {
        stage('Checkout from Git') {
            steps {
               git branch: 'main', url: 'https://github.com/soumosarkar297/terraform-monitoring-server.git'
            }
        }

        stage('terraform version') {
            steps {
                sh 'terraform --version'
            }
        }

        stage('terraform init') {
            steps {
                sh """
                terraform init \
                -backend-config="access_key=${env.AWS_ACCESS_KEY_ID}" \
                -backend-config="secret_key=${env.AWS_SECRET_ACCESS_KEY}"
                """
            }
        }

        stage('terraform validate') {
            steps {

                    sh 'terraform validate'
            }
        }

        stage('terraform plan') {
            steps {
                sh """
                terraform plan \
                -var="access_key=${env.AWS_ACCESS_KEY_ID}" \
                -var="secret_key=${env.AWS_SECRET_ACCESS_KEY}"
                """
            }
        }

        stage('terraform apply/destroy') {
            steps {
                sh """
                terraform ${params.action} --auto-approve \
                -var="access_key=${env.AWS_ACCESS_KEY_ID}" \
                -var="secret_key=${env.AWS_SECRET_ACCESS_KEY}"
                """
            }
        }
    }

    post {
        success {
            echo '✅ terraform execution completed successfully!'
        }
        failure {
            echo '❌ terraform execution failed! Check the logs.'
        }
    }
}
